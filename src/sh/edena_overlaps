#!/usr/bin/env bash

printf "[ %s: Compute overlaps graph with edena ]\n" \
    "$(date)"

# shellcheck disable=SC1091
source "src/sh/bash_header"
# shellcheck disable=SC1091
source "src/sh/io_parser"

# set edena binary
my_edena=bin/edena

# make outdir
outdir="$(dirname "${other_output}")"
bn="$(basename "${other_output}" .ovc)"
if [[ ! -d "${outdir}" ]]; then
    mkdir -p "${outdir}"
fi

# parameters
nThreads=10

# build command
cmd=( "${my_edena}" -nThreads "${nThreads}" -DRpairs "${input_fq[@]}"
      -p "${outdir}/${bn}" )
shopt -s extglob
printf "Final command line: "
printf "%s " "${cmd[@]//+([[:blank:]])/ }"
printf "\n"
shopt -u extglob

# run edena
log_file="${outdir}/edena_overlaps.log.txt"
"${cmd[@]}" &> "${log_file}" &

printf "[ %s: Waiting for edena to finish ]\n" "$(date)"
FAIL=0
fail_wait

# log metadata
metadata_file="${outdir}/METADATA.edena_overlaps.csv"

printf "[ %s: Logging metadata ]\n" "$(date)"
printf "metadata_file: %s\n" "${metadata_file}"
cat <<- _EOF_ > "${metadata_file}"
    Script,${0}
    branch,$(git rev-parse --abbrev-ref HEAD)
    hash,$(git rev-parse HEAD)
    date,$(date +%F)
    edena,$("${my_edena}" 2>&1 | sed '1q;d')
    output,${outdir}
_EOF_

printf "[ %s: Done ]\n" "$(date)"

exit 0
